The ``2-matrix_divided`` module
===============================

using ``matrix_divided``
------------------------
Importing function
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

testing with correct inputs
===========================

>>> matrix_divided([[2, 4, 3], [2.4, 3.4, 6]], 3)
[[0.67, 1.33, 1.0], [0.8, 1.13, 2.0]]

>>> matrix_divided([[2, 4, 3], [2.4, 3.4, 6]], -3.0)
[[-0.67, -1.33, -1.0], [-0.8, -1.13, -2.0]]


testing with wrong input
========================

>>> matrix_divided([2, 3], 4)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(4, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided((3, 5), 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("colm", 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[8, 5.4], [4, 'j']], 6)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2, 3], [3, 2, 56]], 5)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[2,5], [8, 93.7]], "five")
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided([[2,5], [8, 93.7]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
